// <auto-generated />
using FellingAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FellingAPI.Migrations
{
    [DbContext(typeof(SentimentoDB))]
    partial class SentimentoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FellingAPI.Entities.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Grafia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SentimentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SentimentoId");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("FellingAPI.Entities.Sentimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sentimentos");
                });

            modelBuilder.Entity("FellingAPI.Entities.Keyword", b =>
                {
                    b.HasOne("FellingAPI.Entities.Sentimento", null)
                        .WithMany("Keywords")
                        .HasForeignKey("SentimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FellingAPI.Entities.Sentimento", b =>
                {
                    b.Navigation("Keywords");
                });
#pragma warning restore 612, 618
        }
    }
}
